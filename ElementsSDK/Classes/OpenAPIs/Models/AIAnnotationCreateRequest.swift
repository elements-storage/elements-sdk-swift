//
// AIAnnotationCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AIAnnotationCreateRequest: Codable, JSONEncodable, Hashable {

    public var proxy: Int
    public var category: UUID
    public var frame: Int
    public var relativeLeft: Double
    public var relativeTop: Double
    public var relativeWidth: Double
    public var relativeHeight: Double

    public init(proxy: Int, category: UUID, frame: Int, relativeLeft: Double, relativeTop: Double, relativeWidth: Double, relativeHeight: Double) {
        self.proxy = proxy
        self.category = category
        self.frame = frame
        self.relativeLeft = relativeLeft
        self.relativeTop = relativeTop
        self.relativeWidth = relativeWidth
        self.relativeHeight = relativeHeight
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case proxy
        case category
        case frame
        case relativeLeft = "relative_left"
        case relativeTop = "relative_top"
        case relativeWidth = "relative_width"
        case relativeHeight = "relative_height"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(proxy, forKey: .proxy)
        try container.encode(category, forKey: .category)
        try container.encode(frame, forKey: .frame)
        try container.encode(relativeLeft, forKey: .relativeLeft)
        try container.encode(relativeTop, forKey: .relativeTop)
        try container.encode(relativeWidth, forKey: .relativeWidth)
        try container.encode(relativeHeight, forKey: .relativeHeight)
    }
}

