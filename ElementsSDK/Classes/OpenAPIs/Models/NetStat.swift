//
// NetStat.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NetStat: Codable, JSONEncodable, Hashable {

    public var time: Double
    public var cRx: Double
    public var cTx: Double
    public var cRxErr: Double
    public var cTxErr: Double

    public init(time: Double, cRx: Double, cTx: Double, cRxErr: Double, cTxErr: Double) {
        self.time = time
        self.cRx = cRx
        self.cTx = cTx
        self.cRxErr = cRxErr
        self.cTxErr = cTxErr
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case time
        case cRx = "c_rx"
        case cTx = "c_tx"
        case cRxErr = "c_rx_err"
        case cTxErr = "c_tx_err"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(time, forKey: .time)
        try container.encode(cRx, forKey: .cRx)
        try container.encode(cTx, forKey: .cTx)
        try container.encode(cRxErr, forKey: .cRxErr)
        try container.encode(cTxErr, forKey: .cTxErr)
    }
}

