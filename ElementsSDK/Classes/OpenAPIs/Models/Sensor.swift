//
// Sensor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Sensor: Codable, Hashable {

    public var name: String
    public var value: String
    public var unit: String
    public var status: String

    public init(name: String, value: String, unit: String, status: String) {
        self.name = name
        self.value = value
        self.unit = unit
        self.status = status
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case value
        case unit
        case status
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(value, forKey: .value)
        try container.encode(unit, forKey: .unit)
        try container.encode(status, forKey: .status)
    }
}

