//
// ElementsUserProfile.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ElementsUserProfile: Codable, Hashable {

    public enum Language: String, Codable, CaseIterable {
        case en = "en"
        case fr = "fr"
        case de = "de"
        case ru = "ru"
    }
    public var avatar: String?
    public var defaultPage: String?
    public var fullName: String?
    public var language: Language?
    public var fmBookmarks: [String]?
    public var id: Int?
    public var username: String?
    public var unixUsername: String?
    public var displayName: String?
    public var email: String?
    public var ldap: LDAPServer?
    public var effectivePermissions: [String]?

    public init(avatar: String? = nil, defaultPage: String? = nil, fullName: String? = nil, language: Language? = nil, fmBookmarks: [String]? = nil, id: Int? = nil, username: String? = nil, unixUsername: String? = nil, displayName: String? = nil, email: String? = nil, ldap: LDAPServer? = nil, effectivePermissions: [String]? = nil) {
        self.avatar = avatar
        self.defaultPage = defaultPage
        self.fullName = fullName
        self.language = language
        self.fmBookmarks = fmBookmarks
        self.id = id
        self.username = username
        self.unixUsername = unixUsername
        self.displayName = displayName
        self.email = email
        self.ldap = ldap
        self.effectivePermissions = effectivePermissions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case avatar
        case defaultPage = "default_page"
        case fullName = "full_name"
        case language
        case fmBookmarks = "fm_bookmarks"
        case id
        case username
        case unixUsername = "unix_username"
        case displayName = "display_name"
        case email
        case ldap
        case effectivePermissions = "effective_permissions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(avatar, forKey: .avatar)
        try container.encodeIfPresent(defaultPage, forKey: .defaultPage)
        try container.encodeIfPresent(fullName, forKey: .fullName)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(fmBookmarks, forKey: .fmBookmarks)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(username, forKey: .username)
        try container.encodeIfPresent(unixUsername, forKey: .unixUsername)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(ldap, forKey: .ldap)
        try container.encodeIfPresent(effectivePermissions, forKey: .effectivePermissions)
    }
}

