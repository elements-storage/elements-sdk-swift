//
// ElementsVersion.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ElementsVersion: Codable, JSONEncodable, Hashable {

    public var release: String
    public var branch: String?
    public var patchCount: Int
    public var patchCommitCount: Int

    public init(release: String, branch: String?, patchCount: Int, patchCommitCount: Int) {
        self.release = release
        self.branch = branch
        self.patchCount = patchCount
        self.patchCommitCount = patchCommitCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case release
        case branch
        case patchCount = "patch_count"
        case patchCommitCount = "patch_commit_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(release, forKey: .release)
        try container.encode(branch, forKey: .branch)
        try container.encode(patchCount, forKey: .patchCount)
        try container.encode(patchCommitCount, forKey: .patchCommitCount)
    }
}

