//
// EditorProject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EditorProject: Codable, Hashable {

    public var file: Int?
    public var parent: Int?
    public var parentPath: String?
    public var existingFile: Int?
    public var format: String?
    public var project: AnyCodable

    public init(file: Int? = nil, parent: Int? = nil, parentPath: String? = nil, existingFile: Int? = nil, format: String? = nil, project: AnyCodable) {
        self.file = file
        self.parent = parent
        self.parentPath = parentPath
        self.existingFile = existingFile
        self.format = format
        self.project = project
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case file
        case parent
        case parentPath = "parent_path"
        case existingFile = "existing_file"
        case format
        case project
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(file, forKey: .file)
        try container.encodeIfPresent(parent, forKey: .parent)
        try container.encodeIfPresent(parentPath, forKey: .parentPath)
        try container.encodeIfPresent(existingFile, forKey: .existingFile)
        try container.encodeIfPresent(format, forKey: .format)
        try container.encode(project, forKey: .project)
    }
}

