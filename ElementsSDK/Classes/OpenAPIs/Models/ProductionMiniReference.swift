//
// ProductionMiniReference.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductionMiniReference: Codable, Hashable {

    public var id: Int?
    public var name: String?
    public var specialType: Int?

    public init(id: Int? = nil, name: String? = nil, specialType: Int? = nil) {
        self.id = id
        self.name = name
        self.specialType = specialType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case specialType = "special_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(specialType, forKey: .specialType)
    }
}

