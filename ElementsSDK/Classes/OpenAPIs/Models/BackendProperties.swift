//
// BackendProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BackendProperties: Codable, Hashable {

    public var supportsSharingRwPermissionsPriority: Bool
    public var supportsSharingAfp: Bool
    public var supportsSharingSmbRequireLogon: Bool
    public var supportsSharingSmbRecycleBin: Bool
    public var supportsSharingSmbXattrs: Bool
    public var supportsSharingSmbSymlinks: Bool
    public var supportsSharingSmbCustomOptions: Bool
    public var supportsSharingNfsPermissions: Bool

    public init(supportsSharingRwPermissionsPriority: Bool, supportsSharingAfp: Bool, supportsSharingSmbRequireLogon: Bool, supportsSharingSmbRecycleBin: Bool, supportsSharingSmbXattrs: Bool, supportsSharingSmbSymlinks: Bool, supportsSharingSmbCustomOptions: Bool, supportsSharingNfsPermissions: Bool) {
        self.supportsSharingRwPermissionsPriority = supportsSharingRwPermissionsPriority
        self.supportsSharingAfp = supportsSharingAfp
        self.supportsSharingSmbRequireLogon = supportsSharingSmbRequireLogon
        self.supportsSharingSmbRecycleBin = supportsSharingSmbRecycleBin
        self.supportsSharingSmbXattrs = supportsSharingSmbXattrs
        self.supportsSharingSmbSymlinks = supportsSharingSmbSymlinks
        self.supportsSharingSmbCustomOptions = supportsSharingSmbCustomOptions
        self.supportsSharingNfsPermissions = supportsSharingNfsPermissions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case supportsSharingRwPermissionsPriority = "supports_sharing_rw_permissions_priority"
        case supportsSharingAfp = "supports_sharing_afp"
        case supportsSharingSmbRequireLogon = "supports_sharing_smb_require_logon"
        case supportsSharingSmbRecycleBin = "supports_sharing_smb_recycle_bin"
        case supportsSharingSmbXattrs = "supports_sharing_smb_xattrs"
        case supportsSharingSmbSymlinks = "supports_sharing_smb_symlinks"
        case supportsSharingSmbCustomOptions = "supports_sharing_smb_custom_options"
        case supportsSharingNfsPermissions = "supports_sharing_nfs_permissions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(supportsSharingRwPermissionsPriority, forKey: .supportsSharingRwPermissionsPriority)
        try container.encode(supportsSharingAfp, forKey: .supportsSharingAfp)
        try container.encode(supportsSharingSmbRequireLogon, forKey: .supportsSharingSmbRequireLogon)
        try container.encode(supportsSharingSmbRecycleBin, forKey: .supportsSharingSmbRecycleBin)
        try container.encode(supportsSharingSmbXattrs, forKey: .supportsSharingSmbXattrs)
        try container.encode(supportsSharingSmbSymlinks, forKey: .supportsSharingSmbSymlinks)
        try container.encode(supportsSharingSmbCustomOptions, forKey: .supportsSharingSmbCustomOptions)
        try container.encode(supportsSharingNfsPermissions, forKey: .supportsSharingNfsPermissions)
    }
}

