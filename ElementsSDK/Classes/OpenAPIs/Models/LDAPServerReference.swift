//
// LDAPServerReference.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct LDAPServerReference: Codable, Hashable {

    public var id: Int?
    public var name: String?
    public var winbindSeparator: String?
    public var ntDomain: String?

    public init(id: Int? = nil, name: String? = nil, winbindSeparator: String? = nil, ntDomain: String? = nil) {
        self.id = id
        self.name = name
        self.winbindSeparator = winbindSeparator
        self.ntDomain = ntDomain
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case winbindSeparator = "winbind_separator"
        case ntDomain = "nt_domain"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(winbindSeparator, forKey: .winbindSeparator)
        try container.encodeIfPresent(ntDomain, forKey: .ntDomain)
    }



}
