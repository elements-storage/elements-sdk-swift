//
// Download.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Download: Codable, Hashable {

    public var id: Int?
    public var name: String
    public var iconPath: String?
    public var faIcon: String?
    public var path: String

    public init(id: Int? = nil, name: String, iconPath: String? = nil, faIcon: String? = nil, path: String) {
        self.id = id
        self.name = name
        self.iconPath = iconPath
        self.faIcon = faIcon
        self.path = path
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case iconPath = "icon_path"
        case faIcon = "fa_icon"
        case path
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(iconPath, forKey: .iconPath)
        try container.encodeIfPresent(faIcon, forKey: .faIcon)
        try container.encode(path, forKey: .path)
    }
}

