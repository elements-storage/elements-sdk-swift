//
// Queue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Queue: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var group: String
    public var priority: String
    public var inputBased: Bool
    public var isServiced: Bool?
    public var node: StorageNodeMini?
    public var volume: VolumeMini?

    public init(id: String? = nil, group: String, priority: String, inputBased: Bool, isServiced: Bool?, node: StorageNodeMini? = nil, volume: VolumeMini? = nil) {
        self.id = id
        self.group = group
        self.priority = priority
        self.inputBased = inputBased
        self.isServiced = isServiced
        self.node = node
        self.volume = volume
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case group
        case priority
        case inputBased = "input_based"
        case isServiced = "is_serviced"
        case node
        case volume
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(group, forKey: .group)
        try container.encode(priority, forKey: .priority)
        try container.encode(inputBased, forKey: .inputBased)
        try container.encode(isServiced, forKey: .isServiced)
        try container.encodeIfPresent(node, forKey: .node)
        try container.encodeIfPresent(volume, forKey: .volume)
    }
}

